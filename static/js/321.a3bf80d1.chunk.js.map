{"version":3,"file":"static/js/321.a3bf80d1.chunk.js","mappings":"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","sources":["components/Movies/SearchBar/SearchBar.styled.jsx","components/Movies/SearchBar/SearchBar.jsx","components/Movies/FilmsList/FilmsList.styled.jsx","components/Movies/FilmsList/FilmsListItem/FilmsListItem.styled.jsx","components/Movies/FilmsList/FilmsListItem/FilmsListItem.jsx","components/Movies/FilmsList/FilmsList.jsx","components/Movies/Movies.jsx","services/useLocalStorage.js","../node_modules/react-use/esm/useFirstMountState.js","Pages/MoviesPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form``;\n\nexport const Input = styled.input`\n  margin-right: 15px;\n`;\n\nexport const Button = styled.button`\n  border-radius: 20px;\n  border: none;\n  padding: 5px 10px;\n  :active {\n    box-shadow: 2px 2px 2px 2px #bab8b8;\n  }\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Form, Input } from './SearchBar.styled';\n\nconst SearchBar = ({ onSubmit, onChange }) => {\n  const [q, setQ] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(q);\n    onChange(q);\n    setQ('');\n  };\n\n  const handleChange = e => {\n    setQ(e.currentTarget.value.toLowerCase());\n  };\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Input onChange={handleChange} value={q} type=\"text\" />\n      <Button type=\"submit\">Search</Button>\n    </Form>\n  );\n};\n\nexport default SearchBar;\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul``;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const Link = styled(NavLink)``;\n\nexport const Item = styled.li`\n  :not(:last-child) {\n    margin-bottom: 5px;\n  }\n`;\n","import { Outlet, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Item, Link } from './FilmsListItem.styled';\n\nconst FilmsListItem = ({ id, title }) => {\n  const location = useLocation();\n  return (\n    <Item>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        {title}\n      </Link>\n      <Outlet />\n    </Item>\n  );\n};\nexport default FilmsListItem;\nFilmsListItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n};\n","import { List } from './FilmsList.styled';\nimport PropTypes from 'prop-types';\nimport FilmsListItem from './FilmsListItem/FilmsListItem';\n\nconst FilmsList = ({ films }) => {\n  return (\n    <List>\n      {films.length > 0 &&\n        films.map(({ id, name, title }) => (\n          <FilmsListItem key={id} id={id} title={title ?? name} />\n        ))}\n    </List>\n  );\n};\n\nexport default FilmsList;\n\nFilmsList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { useState } from 'react';\nimport SearchBar from './SearchBar/SearchBar';\nimport { toast } from 'react-toastify';\nimport { useEffect } from 'react';\nimport { fetchFilmsByName } from 'services/fetch-api';\nimport { useSearchParams } from 'react-router-dom';\nimport { useFirstMountState } from 'react-use';\nimport FilmsList from './FilmsList/FilmsList';\nimport { useLocalStorage } from 'services/useLocalStorage';\n\nconst Movies = () => {\n  const [films, setFilms] = useLocalStorage([], 'films');\n  const [q, setQ] = useState('');\n  const [searchParam, setSearchParam] = useSearchParams();\n  const isFirstRender = useFirstMountState();\n  const query = searchParam.get('query') ?? '';\n\n  const updQuery = q => {\n    if (q.trim() === '') {\n      toast.error('Please write a name of the film!');\n      return;\n    }\n\n    setQ(q);\n  };\n\n  const updQueryString = q => {\n    const nextParam = q !== '' ? { q } : {};\n    setSearchParam(nextParam);\n  };\n\n  useEffect(() => {\n    if (!isFirstRender) {\n      fetchFilmsByName(q).then(setFilms);\n    }\n  }, [isFirstRender, q, setFilms]);\n\n  if (!films) {\n    return;\n  }\n  return (\n    <div>\n      <SearchBar onSubmit={updQuery} onChange={updQueryString} />\n      {query !== '' && <FilmsList films={films} />}\n    </div>\n  );\n};\nexport default Movies;\n","import { useState, useEffect } from 'react';\n\nconst useLocalStorage = (initialValue, key) => {\n  const getValue = () => {\n    const storage = localStorage.getItem(key);\n\n    if (storage) {\n      return JSON.parse(storage);\n    }\n\n    return initialValue;\n  };\n\n  const [value, setValue] = useState(getValue);\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value));\n  }, [value, key]);\n\n  return [value, setValue];\n};\n\nexport { useLocalStorage };\n","import { useRef } from 'react';\nexport function useFirstMountState() {\n    var isFirst = useRef(true);\n    if (isFirst.current) {\n        isFirst.current = false;\n        return true;\n    }\n    return isFirst.current;\n}\n","import Movies from 'components/Movies/Movies';\nimport { Outlet } from 'react-router-dom';\n\nconst MoviesPage = () => {\n  return (\n    <div>\n      <Movies />\n      <Outlet />\n    </div>\n  );\n};\nexport default MoviesPage;\n"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","Input","_templateObject2","Button","_templateObject3","_ref","onSubmit","onChange","_useState","useState","_useState2","_slicedToArray","q","setQ","_jsxs","e","preventDefault","children","_jsx","currentTarget","value","toLowerCase","type","List","Link","NavLink","Item","id","title","location","useLocation","to","concat","state","from","Outlet","films","length","map","_ref2","name","FilmsListItem","_searchParam$get","_useLocalStorage","initialValue","key","storage","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","useLocalStorage","_useLocalStorage2","setFilms","_useSearchParams","useSearchParams","_useSearchParams2","searchParam","setSearchParam","isFirstRender","isFirst","useRef","current","useFirstMountState","query","get","fetchFilmsByName","then","SearchBar","trim","toast","FilmsList","Movies"],"sourceRoot":""}